{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable5",
						"type": "DatasetReference"
					},
					"name": "OrderDetail"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable4",
						"type": "DatasetReference"
					},
					"name": "OrderHeader"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable6",
						"type": "DatasetReference"
					},
					"name": "Customer"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable7",
						"type": "DatasetReference"
					},
					"name": "Products"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable8",
						"type": "DatasetReference"
					},
					"name": "Category"
				},
				{
					"dataset": {
						"referenceName": "dboCustomer",
						"type": "DatasetReference"
					},
					"name": "MaxCustomerSK"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSynapseAnalyticsTable3",
						"type": "DatasetReference"
					},
					"name": "Load"
				},
				{
					"dataset": {
						"referenceName": "AzureSynapseAnalyticsTable4",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "AzureSynapsedimProduct",
						"type": "DatasetReference"
					},
					"name": "sink2"
				},
				{
					"name": "Cachesink"
				}
			],
			"transformations": [
				{
					"name": "Order"
				},
				{
					"name": "Selecting"
				},
				{
					"name": "select1"
				},
				{
					"name": "join1"
				},
				{
					"name": "select2"
				},
				{
					"name": "filter1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "surrogateKey1"
				},
				{
					"name": "CustomerSK"
				},
				{
					"name": "derivedCustomerSk"
				}
			],
			"scriptLines": [
				"source(output(",
				"          SalesOrderID as integer,",
				"          SalesOrderDetailID as integer,",
				"          OrderQty as integer,",
				"          ProductID as integer,",
				"          UnitPrice as decimal(19,4),",
				"          UnitPriceDiscount as decimal(19,4),",
				"          LineTotal as decimal(38,6),",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> OrderDetail",
				"source(output(",
				"          SalesOrderID as integer,",
				"          RevisionNumber as integer,",
				"          OrderDate as timestamp,",
				"          DueDate as timestamp,",
				"          ShipDate as timestamp,",
				"          Status as integer,",
				"          OnlineOrderFlag as boolean,",
				"          SalesOrderNumber as string,",
				"          PurchaseOrderNumber as string,",
				"          AccountNumber as string,",
				"          CustomerID as integer,",
				"          ShipToAddressID as integer,",
				"          BillToAddressID as integer,",
				"          ShipMethod as string,",
				"          CreditCardApprovalCode as string,",
				"          SubTotal as decimal(19,4),",
				"          TaxAmt as decimal(19,4),",
				"          Freight as decimal(19,4),",
				"          TotalDue as decimal(19,4),",
				"          Comment as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> OrderHeader",
				"source(output(",
				"          CustomerID as integer,",
				"          NameStyle as boolean,",
				"          Title as string,",
				"          FirstName as string,",
				"          MiddleName as string,",
				"          LastName as string,",
				"          Suffix as string,",
				"          CompanyName as string,",
				"          SalesPerson as string,",
				"          EmailAddress as string,",
				"          Phone as string,",
				"          PasswordHash as string,",
				"          PasswordSalt as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'Select * From SalesLT.Customer Where CustomerID < 20000',",
				"     format: 'query') ~> Customer",
				"source(output(",
				"          ProductID as integer,",
				"          Name as string,",
				"          ProductNumber as string,",
				"          Color as string,",
				"          StandardCost as decimal(19,4),",
				"          ListPrice as decimal(19,4),",
				"          Size as string,",
				"          Weight as decimal(8,2),",
				"          ProductCategoryID as integer,",
				"          ProductModelID as integer,",
				"          SellStartDate as timestamp,",
				"          SellEndDate as timestamp,",
				"          DiscontinuedDate as timestamp,",
				"          ThumbNailPhoto as binary,",
				"          ThumbnailPhotoFileName as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> Products",
				"source(output(",
				"          ProductCategoryID as integer,",
				"          ParentProductCategoryID as integer,",
				"          Name as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> Category",
				"source(output(",
				"          MaxCustomerSK as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'SELECT MAX(CustomerSK) AS \\'MaxCustomerSK\\' from dbo.dimCustomer',",
				"     format: 'query',",
				"     staged: true) ~> MaxCustomerSK",
				"OrderDetail, OrderHeader join(OrderDetail@SalesOrderID == OrderHeader@SalesOrderID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> Order",
				"Order select(mapColumn(",
				"          SalesOrderID = OrderDetail@SalesOrderID,",
				"          SalesOrderDetailID,",
				"          ProductID,",
				"          UnitPrice,",
				"          UnitPriceDiscount,",
				"          LineTotal,",
				"          OrderDate,",
				"          CustomerID",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Selecting",
				"Customer select(mapColumn(",
				"          CustomerID,",
				"          CompanyName",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"Products, Category join(Products@ProductCategoryID == Category@ProductCategoryID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 select(mapColumn(",
				"          ProductID,",
				"          ProductNumber,",
				"          Color,",
				"          ProductCategoryID = Category@ProductCategoryID,",
				"          ProductName = Category@Name",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"surrogateKey1 filter(!isNull(Color)) ~> filter1",
				"Selecting derive(SubTotal = add(UnitPrice, LineTotal)) ~> derivedColumn1",
				"select2 keyGenerate(output(Productsk as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"select1 keyGenerate(output(CustomerSK as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> CustomerSK",
				"CustomerSK derive(CustomerSK = CustomerSK+Cachesink#outputs()[1].MaxCustomerSK) ~> derivedCustomerSk",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          SalesOrderID as integer,",
				"          CustomerID as integer,",
				"          OrderDate as date,",
				"          SubTotal as integer,",
				"          SalesOrderDetailID as integer,",
				"          ProductID as integer,",
				"          UnitPrice as integer,",
				"          LineTotal as decimal(18,0),",
				"          UnitPriceDiscount as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          SalesOrderID,",
				"          CustomerID,",
				"          OrderDate,",
				"          SubTotal,",
				"          SalesOrderDetailID,",
				"          ProductID,",
				"          UnitPrice,",
				"          LineTotal,",
				"          UnitPriceDiscount",
				"     )) ~> Load",
				"derivedCustomerSk sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          CustomerID as integer,",
				"          CustomerSK as integer,",
				"          CompanyName as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          CustomerID,",
				"          CompanyName,",
				"          CustomerSK",
				"     )) ~> sink1",
				"filter1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ProductID as integer,",
				"          ProductNumber as string,",
				"          ProductCategoryID as integer,",
				"          Color as string,",
				"          ProductName as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          ProductID,",
				"          ProductNumber,",
				"          ProductCategoryID,",
				"          Color,",
				"          ProductName",
				"     )) ~> sink2",
				"MaxCustomerSK sink(validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     store: 'cache',",
				"     format: 'inline',",
				"     output: false,",
				"     saveOrder: 1) ~> Cachesink"
			]
		}
	}
}